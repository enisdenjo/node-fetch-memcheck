name: memcheck

on:
  workflow_dispatch:
    inputs:
      runs:
        description: Number of load test runs to perform.
        type: number
        required: true
        default: 3
      duration:
        description: Duration of a single run.
        type: number
        required: true
        default: 30s
      consume_body:
        description: Whether to consume the response body.
        type: boolean
        required: true
        default: false

jobs:
  memcheck:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        check:
          - native
          - undici
          - whatwg-node
          - node-fetch
    name: ${{ matrix.check }}
    env:
      PORT: 3000
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 21
      - name: Install
        run: npm ci
      - name: Download k6
        run: |
          curl https://github.com/grafana/k6/releases/download/v0.47.0/k6-v0.47.0-linux-amd64.tar.gz -L | tar xvz --strip-components 1
      - name: Up
        env:
          CONSUME_BODY: ${{ inputs.consume_body }}
        run: |
          docker compose up httpbin ${{ matrix.check }} -d
      - name: Runs
        run: |
          for i in {1..${{ inputs.runs }}}
          do
            # load test
            ./k6 run k6.js --vus=100 --duration=${{ inputs.duration }}

            # collect garbage
            curl http://localhost:$PORT/gc
            curl http://localhost:$PORT/gc
            curl http://localhost:$PORT/gc
            sleep 3

            # write summary
            echo "### $i. Run Stats" >> $GITHUB_STEP_SUMMARY
            docker stats --format json --no-stream | grep ${{ matrix.check }} | jq -r '"- MemPerc: "+.MemPerc,"- MemUsage: "+.MemUsage' >> $GITHUB_STEP_SUMMARY
          done
